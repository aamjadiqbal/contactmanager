{"version":3,"sources":["components/Context.js","components/Contact.js","components/Contacts.js","components/Header.js","components/TextInputGroup.js","components/AddContact.js","components/About.js","components/NotFound.js","components/Test/Test.js","components/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","then","resp","data","value","this","props","children","Component","Consumer","Contact","showing","clickHandler","onDeleteHandler","delete","name","email","phone","className","onClick","style","cursor","color","float","margin","to","Contacts","Fragment","key","Header","banner","defaultProps","TextInputGroup","label","placeholder","onChangeInput","error","htmlFor","classnames","onChange","AddContact","errors","event","target","onSubmitForm","preventDefault","newContact","post","history","push","onSubmit","bind","About","NotFound","Test","console","log","EditContact","updContact","match","params","put","App","basename","process","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.645cec36.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nconst Context = React.createContext()\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT': \r\n         return {\r\n             ...state,\r\n             contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n         }\r\n         case 'ADD_CONTACT': \r\n         return {\r\n             ...state,\r\n             contacts: state.contacts.map(\r\n                 contact => \r\n                 contact.id === action.payload.id ? (contact = action.payload) : contact\r\n             )\r\n         }\r\n         case 'UPDATE_CONTACT': \r\n         return {\r\n             ...state,\r\n             contacts: [action.payload, ...state.contacts]\r\n         }\r\n         default:\r\n             return state\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n        }\r\n    componentDidMount() {\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n            .then(resp => this.setState({\r\n                contacts: resp.data \r\n            }))\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from './Context'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showing: false\r\n    }\r\n    clickHandler = () => {\r\n        this.setState({\r\n            showing: !this.state.showing\r\n        })\r\n    }\r\n    onDeleteHandler = (id, dispatch) => {\r\n        axios.delete('https://jsonplaceholder.typicode.com/users/'+id)\r\n         .then(resp => dispatch({type: 'DELETE_CONTACT', payload: id}))\r\n    }\r\n  \r\n    render() {\r\n        const {id, name, email, phone} = this.props.contact\r\n       \r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const dispatch = value.dispatch\r\n                    return(\r\n                    <div className='card card-body mb-3'>\r\n                        <h4>{name}{'  '}\r\n                            <i className='icon-caret-down' \r\n                                onClick={this.clickHandler}\r\n                                style={{cursor: 'pointer'}}/>\r\n                            <i className='icon-remove'\r\n                               style={{cursor: 'pointer', color: 'red', float: 'right', margin: '5px'}}\r\n                               onClick={() => this.onDeleteHandler(id, dispatch)}/>\r\n                            <Link to={'/editcontact/'+id}>\r\n                                <i className='icon-edit'\r\n                                    style={{cursor: 'pointer', float: 'right', margin: '5px', color: 'black'}}/>\r\n                            </Link>\r\n                            \r\n                        </h4>\r\n                        {this.state.showing ? \r\n                             <ul className='list-group'>\r\n                                <li className='list-group-item'>Email: {email}</li>\r\n                                <li className='list-group-item'>Phone: {phone}</li>\r\n                            </ul>: null}     \r\n                    </div>\r\n                    )\r\n                } }\r\n                \r\n            </Consumer>\r\n                        \r\n                    )          \r\n    }\r\n}\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n}\r\nexport default Contact","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from './Context'\r\n\r\nclass Contacts extends Component {\r\n  \r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => \r\n                    <React.Fragment>\r\n                        <h1 className='display-4 mb-2'>\r\n                            <span className='text-danger'>Contact</span>\r\n                             List\r\n                        </h1>\r\n                    {value.contacts.map(contact => \r\n                     <Contact \r\n                        key={contact.id}\r\n                        contact={contact}/>\r\n                      ) }\r\n                    </React.Fragment>}\r\n            </Consumer>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm\r\n        navbar-dark bg-danger mb-3 py-0\" >\r\n            <div className='container'>\r\n                <a className='navbar-brand'>\r\n                    {props.banner}\r\n                </a>\r\n                <div>\r\n                    <ul className='navbar-nav mr-auto'>\r\n                        <li className='nav-item'>\r\n                            <Link to='/' className='nav-link'>\r\n                               <i className='icon-home'/> Home</Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/addcontact' className='nav-link'>\r\n                            <i className='icon-plus'/>ADD</Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/about' className='nav-link'>\r\n                            <i className='icon-question'/>About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    banner: 'Props not coming' \r\n}\r\nHeader.propTypes = {\r\n    banner: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = (props) => {\r\n \r\n    const { label, type, name, placeholder, onChangeInput, value, error } = props\r\n   \r\n    return (\r\n        <div className='form-group'>\r\n             <label htmlFor='name'> {label} </label>\r\n                <input \r\n                    type={type}\r\n                    name={name}\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': error\r\n                    })}\r\n                    placeholder={placeholder}\r\n                    value={value}\r\n                    onChange={onChangeInput}/>\r\n                    {error && <div className='invalid-feedback'>{error}</div>}\r\n                    \r\n       </div>\r\n    )\r\n}\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChangeInput: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup","import React, { Component } from 'react'\r\nimport { Consumer } from './Context'\r\nimport axios from 'axios'\r\nimport TextInputGroup from './TextInputGroup';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChangeInput = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    onSubmitForm = (dispatch, event) => {\r\n        event.preventDefault();\r\n        \r\n        const { name, email, phone} = this.state\r\n\r\n        if(name === '') {\r\n            this.setState({ errors: { name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if(email === '') {\r\n            this.setState({ errors: { email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if(phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n        const newContact = {\r\n          \r\n            name,\r\n            email,\r\n            phone\r\n            \r\n        }\r\n        axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n            .then(resp => dispatch({\r\n                type: 'ADD_CONTACT', \r\n                payload: resp.data\r\n            }))\r\n        \r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })  \r\n        this.props.history.push('/')  \r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const dispatch = value.dispatch\r\n                    return (\r\n                        <div className='card mb-3'>\r\n                            <div className='card-header'>\r\n                                Add Contact\r\n                            </div>\r\n                            <div className='card-body'>\r\n                                <form onSubmit={this.onSubmitForm.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label='Name'\r\n                                        placeholder='Enter Name'\r\n                                        name='name'\r\n                                        value={name}\r\n                                        onChangeInput={this.onChangeInput}\r\n                                        error = {errors.name}\r\n                                    />\r\n                                    \r\n                                    <TextInputGroup \r\n                                        label='Email'\r\n                                        placeholder='Email...'\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChangeInput={this.onChangeInput}\r\n                                        type='email'\r\n                                        error = {errors.email}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label='Phone'\r\n                                        placeholder='Enter Phone'\r\n                                        name='phone'\r\n                                        value={phone}\r\n                                        onChangeInput={this.onChangeInput}\r\n                                        error = {errors.phone}\r\n                                    />\r\n                                    <input \r\n                                        type='submit'\r\n                                        value= 'Add Contact'\r\n                                        className= 'btn btn-light btn-block'\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default AddContact","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className='display-4'> Contact Manager </h1>\r\n            <p className='lead'>This is a simple app to manage contacts.</p>\r\n            <p className='text-secondary'> Latest Version </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className='display-4'><span className='text-danger'>404</span> - Page Not Found </h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n\r\n    componentWillMount() {\r\n        console.log('Component Will mount')\r\n    }\r\n    componentDidMount() {\r\n        console.log('Component Did Mount')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Test Component </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test","import React, { Component } from 'react'\r\nimport { Consumer } from './Context'\r\nimport axios from 'axios'\r\nimport TextInputGroup from './TextInputGroup';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        \r\n        axios.get('https://jsonplaceholder.typicode.com/users/'+id)\r\n            .then(resp => {\r\n                const contact = resp.data\r\n                return(\r\n                    this.setState({\r\n                        name: contact.name,\r\n                        phone: contact.phone,\r\n                        email: contact.email\r\n                    })\r\n                )\r\n            })\r\n    }\r\n\r\n    onChangeInput = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    onSubmitForm = (dispatch, event) => {\r\n        event.preventDefault();\r\n        \r\n        const { name, email, phone} = this.state\r\n\r\n        if(name === '') {\r\n            this.setState({ errors: { name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if(email === '') {\r\n            this.setState({ errors: { email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if(phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n       \r\n        const updContact = {\r\n            name, email, phone\r\n        }\r\n        const { id } = this.props.match.params\r\n        axios.put('https://jsonplaceholder.typicode.com/users/'+id, updContact)\r\n            .then(resp => dispatch({\r\n                type: 'UPDATE_CONTACT', \r\n                payload: resp.data\r\n            }))\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })  \r\n        this.props.history.push('/')  \r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const dispatch = value.dispatch\r\n                    return (\r\n                        <div className='card mb-3'>\r\n                            <div className='card-header'>\r\n                                Edit Contact\r\n                            </div>\r\n                            <div className='card-body'>\r\n                                <form onSubmit={this.onSubmitForm.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label='Name'\r\n                                        placeholder='Enter Name'\r\n                                        name='name'\r\n                                        value={name}\r\n                                        onChangeInput={this.onChangeInput}\r\n                                        error = {errors.name}\r\n                                    />\r\n                                    \r\n                                    <TextInputGroup \r\n                                        label='Email'\r\n                                        placeholder='Email...'\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChangeInput={this.onChangeInput}\r\n                                        type='email'\r\n                                        error = {errors.email}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label='Phone'\r\n                                        placeholder='Enter Phone'\r\n                                        name='phone'\r\n                                        value={phone}\r\n                                        onChangeInput={this.onChangeInput}\r\n                                        error = {errors.phone}\r\n                                    />\r\n                                    <input \r\n                                        type='submit'\r\n                                        value= 'Edit Contact'\r\n                                        className= 'btn btn-light btn-block'\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default EditContact","import React, { Component } from 'react';\nimport './App.css';\nimport Contacts from './components/Contacts';\nimport Header from './components/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './components/Context'\nimport AddContact from './components/AddContact';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport About from './components/About';\nimport NotFound from './components/NotFound';\nimport Test from './components/Test/Test';\nimport EditContact from './components/EditContact';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">        \n            <Header banner='Contact Mangerr'/>\n              <div className='container'>\n                <Switch>\n                   <Route path='/' exact component={Contacts}/>\n                   <Route path='/about' exact component={About} />\n                   <Route path='/addcontact' exact component={AddContact} />\n                   <Route path='/test' component={Test}/>\n                   <Route path='/editcontact/:id' component={EditContact} />\n                   <Route component={NotFound}/>\n                </Switch>\n              </div>\n      </div>  \n        </BrowserRouter>\n      </Provider>     \n     \n    )\n  } \n}\n\nexport default App;\n \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}